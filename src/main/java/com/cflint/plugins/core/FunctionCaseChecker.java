package com.cflint.plugins.core;

import cfml.parsing.cfscript.CFExpression;
import cfml.parsing.cfscript.CFFunctionExpression;
import com.cflint.BugList;
import com.cflint.plugins.CFLintScannerAdapter;
import com.cflint.plugins.Context;
import ro.fortsoft.pf4j.Extension;

import java.util.Arrays;
import java.util.Optional;

@Extension
public class FunctionCaseChecker extends CFLintScannerAdapter {

    private final static String[] functions = {
            //Array Functions
            "listToArray",
            "arrayAppend",
            "arrayAvg",
            "arrayClear",
            "arrayContains",
            "arrayContainsNoCase",
            "arrayDelete",
            "arrayDeleteAt",
            "arrayDeleteNoCase",
            "arrayEach",
            "arrayFilter",
            "arrayFind",
            "arrayFindAll",
            "arrayFindAllNoCase",
            "arrayFindNoCase",
            "arrayGetMetaData",
            "arrayInsertAt",
            "arrayIsDefined",
            "arrayIsEmpty",
            "arrayLen",
            "arrayMap",
            "arrayMax",
            "arrayMin",
            "arrayNew",
            "arrayPrepend",
            "arrayResize",
            "arraySet",
            "arraySetMetaData",
            "arraySlice",
            "arraySort",
            "arraySum",
            "arraySwap",
            "arrayToList",
            "isArray",

            //List Functions
            "asc",
            "chr",
            "cJustify",
            "compare",
            "compareNoCase",
            "decrypt",
            "encrypt",
            "find",
            "findNoCase",
            "findOneOf",
            "formatBaseN",
            "getClientVariablesList",
            "lCase",
            "left",
            "len",
            "listAppend",
            "listChangeDelims",
            "listContains",
            "listContainsNoCase",
            "listDeleteAt",
            "listFilter",
            "listFind",
            "listFindNoCase",
            "listFirst",
            "listGetAt",
            "listInsertAt",
            "listLast",
            "listLen",
            "listMap",
            "listPrepend",
            "listQualify",
            "listReduce",
            "listRest",
            "listRemoveDuplicates",
            "listSetAt",
            "listSort",
            "listValueCount",
            "listValueCountNoCase",
            "replaceList",
            "replaceListNoCase",
            "valueList",

            //String Functions
            "binaryDecode",
            "binaryEncode",
            "canonicalize",
            "charsetDecode",
            "charsetEncode",
            "dayOfWeekAsString",
            "decrypt",
            "encodeForCss",
            "encodeForDn",
            "encodeForHtml",
            "encodeForHtmlAttribute",
            "encodeForJavaScript",
            "encodeForLdap",
            "encodeForUrl",
            "encodeForXml",
            "encodeForXmlAttribute",
            "encrypt",
            "findOneOf",
            "generateSecretKey",
            "getToken",
            "hash",
            "hmac",
            "htmlCodeFormat",
            "htmlEditFormat",
            "insert",
            "jsStringFormat",
            "lJustify",
            "lsIsCurrency",
            "lsIsDate",
            "lsIsNumeric",
            "lsParseCurrency",
            "lsParseDateTime",
            "lsParseEuroCurrency",
            "lsParseNumber",
            "lTrim",
            "mid",
            "monthAsString",
            "paragraphFormat",
            "parseDateTime",
            "reFind",
            "reFindNoCase",
            "reMatch",
            "reMatchNoCase",
            "removeChars",
            "repeatString",
            "replace",
            "replaceNoCase",
            "reReplace",
            "reReplaceNoCase",
            "reverse",
            "right",
            "rJustify",
            "rTrim",
            "spanExcluding",
            "spanIncluding",
            "stripCR",
            "toBase64",
            "toBinary",
            "toString",
            "trim",
            "uCase",
            "urlDecode",
            "urlEncodedFormat",
            "val",
            "wrap",
            "xmlFormat",

            //Struct Functions
            "duplicate",
            "isStruct",
            "structAppend",
            "structClear",
            "structCopy",
            "structCount",
            "structDelete",
            "structFind",
            "structFindKey",
            "structFindValue",
            "structGet",
            "structGetMetadata",
            "structInsert",
            "structIsEmpty",
            "structKeyArray",
            "structKeyExists",
            "structKeyList",
            "structNew",
            "structSetMetadata",
            "structSort",
            "structToSorted",
            "structUpdate",

            //File Functions
            "fileClose",
            "fileCopy",
            "fileDelete",
            "fileExists",
            "fileIsEOF",
            "fileMove",
            "fileOpen",
            "fileRead",
            "fileReadBinary",
            "fileReadLine",
            "fileSeek",
            "fileSetAccessMode",
            "fileSetAttribute",
            "fileSetLastModified",
            "fileSkipBytes",
            "fileUpload",
            "fileUploadAll",
            "fileWrite",
            "fileWriteLine",
            "getCurrentTemplatePath",
            "getFileFromPath",
            "getFileInfo",
            "getProfileSections",
            "getProfileString",

            //Array Functions
            "cacheGet",
            "cacheGetAllIds",
            "cacheGetMetadata",
            "cacheGetProperties",
            "cacheGetSession",
            "cacheIdExists",
            "cachePut",
            "cacheRegionExists",
            "cacheRegionNew",
            "cacheRegionRemove",
            "cacheRemove",
            "cacheRemoveAll",
            "cacheSetProperties",

            //Conversion Functions
            "deserializeJson",
            "dotNetToCFType",
            "serializeJson",
            "toScript",
            "xmlParse",

            //DateTime Functions
            "createDate",
            "createDateTime",
            "createODBCDate",
            "createODBCDateTime",
            "createODBCTime",
            "createTime",
            "createTimeSpan",
            "dateAdd",
            "dateCompare",
            "dateConvert",
            "dateDiff",
            "dateFormat",
            "datePart",
            "dateTimeFormat",
            "day",
            "dayOfWeek",
            "dayOfYear",
            "daysInMonth",
            "daysInYear",
            "firstDayOfMonth",
            "getHttpTimeString",
            "getTickCount",
            "getTimeZoneInfo",
            "hour",
            "isDate",
            "isDateObject",
            "isLeapYear",
            "isNumericDate",
            "lsDateFormat",
            "lsTimeFormat",
            "minute",
            "month",
            "now",
            "parseDateTime",
            "quarter",
            "second",
            "setDay",
            "setHour",
            "setMinute",
            "setMonth",
            "setSecond",
            "setYear",
            "timeFormat",
            "week",
            "year",

            //Data Output Functions
            "writeDump",
            "writeLog",
            "writeOutput",

            //Debugging Functions
            "debug",

            //Displaying and Formatting Functions
            "ajaxLink",
            "ajaxOnLoad",
            "booleanFormat",
            "dateFormat",
            "decimalFormat",
            "dollarFormat",
            "encodeForXPath",
            "getLocale",
            "getLocaleDisplayName",
            "lsNumberFormat",
            "lsCurrencyFormat",
            "lsEuroCurrencyFormat",
            "numberFormat",
            "paragraphFormat",
            "yesNoFormat",

            //Dynamic Evaluation Functions
            "de",
            "evaluate",
            "precisionEvaluate",
            "setVariable",

            //Exception Handling Functions
            "throw",

            //Extensibility Functions
            "createObject",
            "getComponentMetaData",
            "getGatewayHelper",
            "isInstanceOf",
            "releaseComObject",
            "sendGatewayMessage",

            //Flow Control Functions
            "location",

            //International Functions
            "getEncoding",
            "getTime",
            "setLocale",

            //Image Functions
            "imageAddBorder",
            "imageBlur",
            "imageClearRect",
            "imageCopy",
            "imageCrop",
            "imageDrawArc",
            "imageDrawBeveledRect",
            "imageDrawCubicCurve",
            "imageDrawLine",
            "imageDrawOval",
            "imageDrawPoint",
            "imageDrawQuadraticCurve",
            "imageDrawRect",
            "imageDrawRoundRect",
            "imageDrawText",
            "imageFlip",
            "imageGetBlob",
            "imageGetBufferedImage",
            "imageGetExifMetaData",
            "imageGetExifTag",
            "imageGetHeight",
            "imageGetIptcTag",
            "imageGetIptcMetaData",
            "imageGetWidth",
            "imageGrayScale",
            "imageInfo",
            "imageNew",
            "imageNegative",
            "imageOverlay",
            "imagePaste",
            "imageRead",
            "imageReadBase64",
            "imageResize",
            "imageRotate",
            "imageRotateDrawingAxis",
            "imageScaleToFit",
            "imageSetAntialiasing",
            "imageSetBackgroundColor",
            "imageSetDrawingColor",
            "imageSetDrawingStroke",
            "imageSetDrawingTransparency",
            "imageSharpen",
            "imageShear",
            "imageShearDrawingAxis",
            "imageTranslate",
            "imageTranslateDrawingAxis",
            "imageWrite",
            "imageWriteBase64",
            "imageXorDrawingMode",
            "isImage",
            "isImageFile",

            //Microsoft Office Integration Functions
            "isSpreadsheetFile",
            "isSpreadsheetObject",
            "spreadsheetAddColumn",
            "spreadsheetAddFreezePane",
            "spreadsheetAddImage",
            "spreadsheetAddInfo",
            "spreadsheetAddRow",
            "spreadsheetAddRows",
            "spreadsheetAddSplitPane",
            "spreadsheetCreateSheet",
            "spreadsheetDeleteColumn",
            "spreadsheetDeleteColumns",
            "spreadsheetDeleteRow",
            "spreadsheetDeleteRows",
            "spreadsheetFormatCell",
            "spreadsheetFormatCellRange",
            "spreadsheetFormatColumn",
            "spreadsheetFormatColumns",
            "spreadsheetFormatRow",
            "spreadsheetFormatRows",
            "spreadsheetGetCellComment",
            "spreadsheetGetCellFormula",
            "spreadsheetGetCellValue",
            "spreadsheetInfo",
            "spreadsheetMergeCells",
            "spreadsheetNew",
            "spreadsheetRead",
            "spreadsheetReadBinary",
            "spreadsheetRemoveSheet",
            "spreadsheetSetActiveSheet",
            "spreadsheetSetActiveSheetNumber",
            "spreadsheetSetCellFormula",
            "spreadsheetSetCellComment",
            "spreadsheetSetCellValue",
            "spreadsheetSetColumnWidth",
            "spreadsheetSetFooter",
            "spreadsheetSetHeader",
            "spreadsheetSetRowHeight",
            "spreadsheetShiftColumns",
            "spreadsheetShiftRows",
            "spreadsheetWrite",

            //ORM Functions
            "entityDelete",
            "entityLoad",
            "entityLoadByExample",
            "entityLoadByPk",
            "entityMerge",
            "entityNew",
            "entityReload",
            "entitySave",
            "entityToQuery",
            "ormClearSession",
            "ormCloseAllSessions",
            "ormCloseSession",
            "ormEvictCollection",
            "ormEvictEntity",
            "ormEvictQueries",
            "ormExecuteQuery",
            "ormFlushAll",
            "ormFlush",
            "ormGetSession",
            "ormGetSessionFactory",
            "ormReload",

            //Other Functions
            "applicationStop",
            "createDynamicProxy",
            "createUUID",
            "deleteClientVariable",
            "getApplicationMetaData",
            "getBaseTagData",
            "getBaseTagList",
            "getBaseTemplatePath",
            "getClientVariablesList",
            "getLocalHostIp",
            "isLocalHost",
            "objectEquals",
            "objectLoad",
            "objectSave",
            "preserveSingleQuotes",
            "sessionGetMetaData",
            "urlSessionFormat",

            //Mathematical Functions
            "abs",
            "aCos",
            "arrayAvg",
            "arraySum",
            "aSin",
            "atn",
            "bitAnd",
            "bitMaskClear",
            "bitMaskRead",
            "bitMaskSet",
            "bitNot",
            "bitOr",
            "bitShln",
            "bitShrn",
            "bitXor",
            "ceiling",
            "cos",
            "decrementValue",
            "exp",
            "fix",
            "floor",
            "formatBaseN",
            "incrementValue",
            "inputBaseN",
            "int",
            "log",
            "log10",
            "max",
            "min",
            "pi",
            "rand",
            "randomize",
            "randRange",
            "round",
            "sgn",
            "sin",
            "sql",
            "tan",

            //System Functions
            "directoryCreate",
            "directoryDelete",
            "directoryList",
            "directoryRename",
            "duplicate",
            "expandPath",
            "getContextRoot",
            "getDirectoryFromPath",
            "getException",
            "getFunctionCalledName",
            "getFunctionList",
            "getHttpRequestData",
            "getMetricData",
            "getPageContext",
            "getPrinterInfo",
            "getProfileSections",
            "getProfileString",
            "getReadableImageFormats",
            "getTemplatePath",
            "getTickCount",
            "getWriteableImageFormats",
            "setProfileString",
            "sleep",

            //XML Functions
            "addSoapRequestHeader",
            "addSoapResponseHeader",
            "getSoapRequest",
            "getSoapRequestHeader",
            "getSoapResponse",
            "getSoapResponseHeader",
            "isSoapRequest",
            "isWDDX",
            "xmlChildPos",
            "xmlElemNew",
            "xmlFormat",
            "xmlGetNodeType",
            "xmlNew",
            "xmlParse",
            "xmlSearch",
            "xmlTransform",
            "xmlValidate",

            //Transaction Functions
            "transactionCommit",
            "transactionRollback",
            "transactionSetSavePoint",

            //Query Functions
            "getMetaData",
            "isQuery",
            "queryAddColumn",
            "queryAddRow",
            "queryConvertForGrid",
            "queryEach",
            "queryExecute",
            "queryFilter",
            "queryGetRow",
            "queryGetResult",
            "queryKeyExists",
            "queryMap",
            "queryNew",
            "queryReduce",
            "querySetCell",
            "querySort",
            "quotedValueList",
            "valueArray",
            "valueList",

            //Security Functions
            "decryptBinary",
            "encryptBinary",
            "generatePbkdfKey",
            "getAuthUser",
            "getTempDirectory",
            "getTempFile",
            "getUserRoles",
            "isUserInRole",
            "isUserLoggedIn",
            "sessionInvalidate",
            "sessionRotate",
            "verifyClient",

            //Decision Functions
            "directoryExists",
            "fileExists",
            "fileIsEof",
            "isArray",
            "isBinary",
            "isBoolean",
            "isClosure",
            "isCustomFunction",
            "isDate",
            "isDateObject",
            "isDDX",
            "isDebugMode",
            "isDefined",
            "isFileObject",
            "isInstanceOf",
            "isJson",
            "isK2ServerABroker",
            "isK2ServerDocCountExceeded",
            "isK2ServerOnline",
            "isLeapYear",
            "isNull",
            "isNumeric",
            "isNumericDate",
            "isObject",
            "isPdfArchive",
            "isPdfFile",
            "isPdfObject",
            "isQuery",
            "isSimpleValue",
            "isStruct",
            "isUserInAnyRole",
            "isValid",
            "isWDDX",
            "isXml",
            "isXmlAttribute",
            "isXmlDoc",
            "isXmlElem",
            "isXmlNode",
            "isXmlRoot"
    };

    @Override
    public void expression(final CFExpression expression, final Context context, final BugList bugs) {
        if (expression instanceof CFFunctionExpression) {

            final CFFunctionExpression functionExpression = (CFFunctionExpression) expression;
            String functionName = functionExpression.getName();

            Optional<String> match = Arrays.stream(functions)
                    .filter(function -> function.equalsIgnoreCase(functionExpression.getName()))
                    .findFirst();

            if (match.isPresent()) {
                if (!match.get().equals(functionName)) {
                    context.addMessage("INCORRECT_FUNCTION_CASE", functionName);
                }
            } else {
                if (Character.isUpperCase(functionExpression.getName().charAt(0))) {
                    context.addMessage("INCORRECT_FUNCTION_CASE", functionName);
                }
            }
        }
    }
}